{"version":3,"sources":["webpack/bootstrap bbd14b1b0692a08d44f4","./crossfire/main.js","./crossfire/moving_object.js","./crossfire/util.js","./crossfire/bullet.js","./crossfire/game.js","./crossfire/game_view.js","./crossfire/shooter.js","./crossfire/target.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAC;;;;;;;AC3BD;AACA,WAAU,eAAe;AACzB,WAAU,eAAe;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;;;;;;ACjLA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACVA;AACA;;AAEA;AACA;;AAEA,uBAAsB;;AAEtB;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC/BA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,+CAA+C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,gBAAe,2BAA2B;AAC1C;;AAEA,wBAAuB,2BAA2B;AAClD;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,sCAAsC;AACpE;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,6DAA6D;AAC3F;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;;AAGA;;;;;;;ACrGA;AACA;AACA;AACA,oCAAmC,cAAc,IAAI;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;;AAEA,iBAAgB;;AAEhB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;;;;AAKA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/crossfire/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bbd14b1b0692a08d44f4\n **/","var MovingObject = require('./moving_object');\nvar Util = require('./util');\nvar Bullet = require('./bullet');\nvar Game = require('./game');\nvar GameView = require('./game_view');\nvar Shooter = require('./shooter');\nvar Target = require('./target');\n\n$(function() {\n    // get canvas & set size\n    $('body').css(\"background-color\", \"#002b36\");\n    var $canvas = $(\"canvas\");\n    var c = $canvas[0].getContext(\"2d\");\n    $canvas[0].height = $(window).height() * 0.95;\n    $canvas[0].width = $(window).width() * 0.95;\n\n    // // create shooter, game, target\n    var shooterRight = new Shooter(\"right\");\n    var shooterLeft = new Shooter(\"left\");\n\n    var targetRight = new Target($canvas, \"right\");\n    var targetLeft = new Target($canvas, \"left\");\n\n    var game = new Game($canvas, shooterRight, shooterLeft, targetRight, targetLeft);\n    var gameView = new GameView(game, $canvas, shooterRight, shooterLeft);\n\n    gameView.start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./crossfire/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var defaults = {\n    pos: { x: 75, y: 75 },\n    vel: { x: 10, y: 10 },\n    radius: 15,\n    color: '#000'\n};\n\nvar MovingObject = function($canvas, options) {\n    options = $.extend(defaults, options);\n    this.$canvas = $canvas;\n    this.ctx = $canvas[0].getContext(\"2d\");\n    this.pos = options.pos;\n    this.vel = options.vel;\n    // Apply slight vel adjustment to make aim imperfect\n    this.vel.y += Math.random() * 0.40 - 0.20;\n    this.vel.x += Math.random() * 0.40 - 0.20;\n    this.radius = options.radius;\n    this.color = options.color;\n    //increments on each bounce check; must clear\n    //some number to allow another bounce\n    this.bounceRecency = 0;\n    //outOfBounds set to true when off canvas; cleared\n    // from game.bulletArr on next bounceCheck iteration\n    this.outOfBounds = false;\n};\n\nMovingObject.prototype.draw = function(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(\n        this.pos.x,\n        this.pos.y,\n        this.radius,\n        0, // startAngle\n        2 * Math.PI\n    );\n    ctx.fill();\n};\n\nMovingObject.prototype.move = function() {\n    if (this.target) {\n        this.decelerate();\n    }\n    this.pos.x += this.vel.x;\n    this.pos.y += this.vel.y;\n};\n\nMovingObject.prototype.bounceCheck = function(bufferSize) {\n    // if position invalid on X-axis, object is out of bounds\n    // will be removed from game.bulletArr after bounce.check\n    if (this.pos.x - this.radius >= this.$canvas.width()) {\n        this.outOfBounds = true;\n    } else if (this.pos.x + this.radius <= 0) {\n        this.outOfBounds = true;\n    }\n\n    // for y axis bounces, calculate buffer height at bullet.pos.x\n    // See if bullet pos.y is low/high enough to trigger bounce\n    var halfCtxWidth = this.$canvas.width() / 2;\n    var ctxHeight = this.$canvas.height();\n    var bufferHeight = (Math.abs(this.pos.x - halfCtxWidth) / halfCtxWidth) * (bufferSize * ctxHeight);\n\n    // if position invalid on Y axis, trigger Y-axis bounce\n    if (this.pos.y + this.radius >= ctxHeight - bufferHeight) {\n        this.pos.y = this.$canvas.height() - this.radius  - bufferHeight;\n        this.bounce(\"y\");\n    } else if (this.pos.y - this.radius <= bufferHeight) {\n        this.pos.y = this.radius + bufferHeight;\n        this.bounce(\"y\");\n    }\n};\n\nMovingObject.prototype.bounce = function(dir) {\n    if (dir === \"x\") {\n        this.vel.x *= -1;\n    } else if (dir === \"y\") {\n        this.vel.y *= -1;\n    }\n};\n\nMovingObject.prototype.isCollidedWith = function(otherObj) {\n    var xDist = this.pos.x - otherObj.pos.x;\n    var yDist = this.pos.y - otherObj.pos.y;\n    var centerDistance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n    if (centerDistance < (this.radius + otherObj.radius) &&\n        (this.bounceRecency > 10 || otherObj.bounceRecency > 10)) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nMovingObject.prototype.objectBounce = function(otherObj) {\n    this.bounceRecency = 0;\n    otherObj.bounceRecency = 0;\n    // check if x velocities have opposite direction\n    if (this.vel.x * this.vel.x < 0) {\n        this.bounce(\"x\");\n        otherObj.bounce(\"x\");\n    } else {\n        var swapX = this.vel.x;\n        this.vel.x = otherObj.vel.x;\n        otherObj.vel.x = swapX;\n    }\n\n    // check if y velocities have opposite direction\n    if (otherObj.vel.y * this.vel.y < 0) {\n        this.bounce(\"y\");\n        otherObj.bounce(\"y\");\n    } else {\n        var swapY = this.vel.y;\n        this.vel.y = otherObj.vel.y;\n        otherObj.vel.y = swapY;\n    }\n};\n\nMovingObject.prototype.targetBulletBounce = function(bullet) {\n    //this is a target -- only called when targets and bullets collide\n\n    // adjust target velocity by a small factor\n    // base on bullet velocity\n    this.vel.x += bullet.vel.x * 0.03;\n    this.vel.y += bullet.vel.y * 0.03;\n\n    // bullets are completely elastic\n    // quick and dirty solution: calculate difference\n    // in position of circle centers to determine if collision\n    // is on side or on top -- then reverse bullet's vel.y or vel.x accordingly\n    // Reverse bullet velocities if same direction as target\n    // Simulates \"bouncing off\"\n    var yDiff = Math.sqrt(Math.pow(this.pos.y - bullet.pos.y, 2));\n    if (yDiff < .80 * this.radius) {\n        bullet.vel.x *= -1;\n    } else {\n        bullet.vel.y *= -1;\n    }\n\n    // attempt to remove bullet from inside of circle\n    var i = 0;\n    while (this.isCollidedWith(bullet) && i < 10) {\n        bullet.move();\n        i++;\n    }\n};\n\nMovingObject.prototype.drawTrail = function(ctx) {\n    var offsetY = this.vel.y;\n    offsetY *= 3;\n    var offsetX = this.vel.x;\n    offsetX *= 3;\n    var trailColors = ['#aaa', '#888', '#333'];\n\n    for (i = 0; i <= 2; i++) {\n        ctx.fillStyle = trailColors[i];\n        ctx.beginPath();\n        ctx.arc(\n            this.pos.x - offsetX * 15,\n            this.pos.y - offsetY * 15,\n            Math.floor(this.radius / (3.5 - i)),\n            0, // startAngle\n            2 * Math.PI\n        );\n        ctx.fill();\n\n        offsetY = offsetY * 0.5;\n        offsetX = offsetX * 0.5;\n    }\n};\n\nMovingObject.prototype.decelerate = function() {\n    this.vel.x *= 0.9965;\n    this.vel.y *= 0.9965;\n};\n\n\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./crossfire/moving_object.js\n ** module id = 1\n ** module chunks = 0\n **/","var Util = function () {\n\n};\n\nUtil.inherits = function (childClass, parentClass) {\n  Surrogate = function () {};\n  Surrogate.prototype = parentClass.prototype;\n  childClass.prototype = new Surrogate ();\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./crossfire/util.js\n ** module id = 2\n ** module chunks = 0\n **/","var MovingObject = require('./moving_object');\nvar Util = require('./util');\n\nvar Bullet = function(side, $canvas, options) {\n    this.$canvas = $canvas;\n\n    var bullletPos = { y: Math.floor(this.$canvas.height() / 2) };\n\n    if (side === \"l\") {\n        bullletPos.x = 50;\n    } else if (side === \"r\") {\n        bullletPos.x = this.$canvas.width() - 50;\n    }\n\n    var defaults = {\n        radius: Bullet.RADIUS,\n        color: Bullet.COLOR,\n        pos: bullletPos\n    };\n\n    options = options || {};\n\n    MovingObject.call(this, $canvas, $.extend(defaults, options));\n};\n\n// bullet class constants\nBullet.RADIUS = 8;\nBullet.COLOR = '#000';\n\nUtil.inherits(Bullet, MovingObject);\n\nmodule.exports = Bullet;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./crossfire/bullet.js\n ** module id = 3\n ** module chunks = 0\n **/","var Bullet = require('./bullet');\nvar Game = function($canvas, shooterRight, shooterLeft, targetRight, targetLeft) {\n    this.$canvas = $canvas;\n    this.ctx = this.$canvas[0].getContext(\"2d\");\n\n    this.numBullets = 35\n    this.bulletArr = [];\n\n    // Indicates percent of Y-axis exits blocked by\n    // buffers. Eg, with two 25% buffers, 50% of each\n    // exit will be blocked.\n    this.bufferHeight = 0.25;\n\n    this.width = $canvas.width();\n    this.height = $canvas.height();\n\n    this.shooterRight = shooterRight;\n    this.shooterLeft = shooterLeft;\n    this.shooterRight.draw();\n    this.shooterLeft.draw();\n\n    this.targetRight = targetRight;\n    this.targetLeft = targetLeft;\n\n    this.bulletArr.push(this.targetLeft);\n    this.bulletArr.push(this.targetRight);\n};\n\nGame.prototype.addBullets = function(numBullets, options) {\n    for (i = 0; i < numBullets; i++) {\n        var side = [\"l\", \"r\"][Math.floor(Math.random() * 2)];\n        this.bulletArr.push(new Bullet(side, this.$canvas, options));\n    }\n};\n\n// Draw vertical grid in background of canvas\nGame.prototype.drawGrid = function(ctx) {\n    var spacing = 25;\n    var i;\n    for (i = 0; i < Math.ceil(this.$canvas.width() / spacing); i++) {\n        var x = spacing * i;\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, this.$canvas.height());\n        ctx.strokeStyle = '#b58900';\n        ctx.lineWidth = 1;\n        ctx.stroke();\n    }\n};\n\n// render all bullets\nGame.prototype.draw = function() {\n    this.drawGrid(this.ctx);\n    this.drawBuffers();\n    this.bulletArr.forEach(function(bullet) {\n        bullet.draw(bullet.ctx);\n    });\n\n    this.updateShooters();\n\n    this.targetRight.draw(this.targetRight.ctx);\n    this.targetLeft.draw(this.targetLeft.ctx);\n};\n\n// update positions of all bullets\nGame.prototype.move = function() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.bulletArr.forEach(function(bullet, idx) {\n        bullet.move();\n        bullet.bounceCheck(this.bufferHeight);\n        if (bullet.outOfBounds === true) {\n            this.bulletArr.splice(idx, 1);\n        }\n    }.bind(this));\n};\n\n// Targets are first two objs in this.bulletArr\n// So bullets should never be \"i\" iterator when\n//  target is \"j\" iterator\nGame.prototype.checkCollisions = function() {\n\n    for (i = 0; i < this.bulletArr.length; i++) {\n        bulletOne = this.bulletArr[i];\n\n        for (j = i + 1; j < this.bulletArr.length; j++) {\n            bulletTwo = this.bulletArr[j];\n\n            if (bulletOne.isCollidedWith(bulletTwo)) {\n                if (bulletOne.target && !bulletTwo.target) {\n                    bulletOne.targetBulletBounce(bulletTwo);\n                } else {\n                    bulletOne.objectBounce(bulletTwo);\n                }\n            }\n        }\n\n        bulletOne.bounceRecency++;\n    }\n};\n\nGame.prototype.updateShooters = function () {\n    [this.shooterRight, this.shooterLeft].forEach (function (shooter) {\n        if (shooter.aimUp === true) {\n            shooter.aim(\"up\");\n        } else if (shooter.aimDown === true) {\n            shooter.aim(\"down\");\n        }\n    });\n};\n\nGame.prototype.drawBuffers = function () {\n    this.ctx.fillStyle = '#b58900';\n    this.ctx.moveTo(0, 0);\n    this.ctx.lineTo(0, this.$canvas.height() * this.bufferHeight);\n    this.ctx.lineTo(this.$canvas.width() / 2, 0);\n    this.ctx.fill();\n\n    this.ctx.moveTo(0, this.$canvas.height());\n    this.ctx.lineTo(0, this.$canvas.height() - this.bufferHeight * this.$canvas.height());\n    this.ctx.lineTo(this.$canvas.width() / 2, this.$canvas.height());\n    this.ctx.fill();\n\n    this.ctx.moveTo(this.$canvas.width(), this.$canvas.height());\n    this.ctx.lineTo(this.$canvas.width(), this.$canvas.height() - this.bufferHeight * this.$canvas.height());\n    this.ctx.lineTo(this.$canvas.width() / 2, this.$canvas.height());\n    this.ctx.fill();\n\n    this.ctx.moveTo(this.$canvas.width(), 0);\n    this.ctx.lineTo(this.$canvas.width(), this.bufferHeight * this.$canvas.height());\n    this.ctx.lineTo(this.$canvas.width() / 2, 0);\n    this.ctx.fill();\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./crossfire/game.js\n ** module id = 4\n ** module chunks = 0\n **/","var GameView = function(game, $canvas, shooterRight, shooterLeft) {\n    this.game = game;\n    this.$canvas = $canvas;\n    this.shooterRight = shooterRight;\n    this.shooterLeft = shooterLeft;\n\n    this.gameInterval = function() {\n        this.game.move();\n        this.game.draw();\n        this.game.checkCollisions();\n    };\n\n    this.aimInterval = function(shooter, dir) {\n        shooter.aim(dir);\n    };\n\n    this.intervalMs = 8;\n};\n\nGameView.prototype.start = function() {\n    i = 0;\n    setInterval(this.gameInterval.bind(this), this.intervalMs);\n    this.handleInput();\n};\n\nGameView.prototype.handleInput = function() {\n    var rightAim = function(dir) {\n        setInterval(this.shooterRight.aim(dir), 15);\n    }.bind(this);\n    var leftAim = function(dir) {\n        setInterval(this.shooterLeft.aim(dir), 15);\n    }.bind(this);\n\n    $('body').keydown(function(e) {\n        switch (e.which) {\n            case 88: // letter \"x\"\n                // function () {\n                this.game.addBullets(\n                    1, {\n                        color: '#dc322f',\n                        pos: { x: 50, y: this.$canvas.height() / 2 },\n                        vel: {\n                            x: this.shooterLeft.vel.x,\n                            y: this.shooterLeft.vel.y\n                        }\n                    });\n                //  }\n                break;\n            case 190: // period key\n                this.game.addBullets(\n                    1, {\n                        color: '#268bd2',\n                        pos: { x: this.$canvas.width() - 50, y: this.$canvas.height() / 2 },\n                        vel: {\n                            x: this.shooterRight.vel.x,\n                            y: this.shooterRight.vel.y\n                        }\n                    });\n                break;\n            case 222: // apostrophe\n                this.shooterRight.aimUp = true;\n                break;\n            case 191: // the \"/\" key\n                this.shooterRight.aimDown = true;\n                break;\n            case 65: // letter \"a\"\n                this.shooterLeft.aimUp = true;\n                break;\n            case 90: // letter \"z\"\n                this.shooterLeft.aimDown = true;\n                break;\n            case 48:\n                this.game.bulletArr = [];\n                break;\n            default:\n                break;\n        }\n    }.bind(this));\n\n    $('body').keyup(function(e) {\n        switch (e.which) {\n            case 222: // apostrophe\n                this.shooterRight.aimUp = false;\n                break;\n            case 191: // the \"/\" key\n                this.shooterRight.aimDown = false;\n                break;\n            case 65: // letter \"a\"\n                this.shooterLeft.aimUp = false;\n                break;\n            case 90: // letter \"z\"\n                this.shooterLeft.aimDown = false;\n                break;\n            default:\n                break;\n        }\n    }.bind(this));\n\n};\n\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./crossfire/game_view.js\n ** module id = 5\n ** module chunks = 0\n **/","var Shooter = function(side) {\n    this.side = side;\n    this.ammo = 0;\n    this.vel = side === \"right\" ? { x: -3, y: 0 } : { x: 3, y: 0 };\n    this.aimAngle = function() {\n        var angle = Math.tan(this.vel.y / Math.sqrt(Math.pow(this.vel.x, 2))) * 360 / (2 * Math.PI);\n        if (this.side === \"right\") {\n            angle *= -1;\n        }\n\n        return angle;\n    };\n    this.gun = this.side === \"right\" ? $('.gun-right') : $('.gun-left');\n    this.aimUp = false;\n    this.aimDown = false;\n\n    this.placeGun();\n};\n\nShooter.prototype.fire = function() {\n    this.ammo--;\n};\n\nShooter.prototype.reload = function() {\n    this.ammo++;\n};\n\n// Magnitude of bullet velocity is always 3\n// Adjust velocity vectors by incrementing vel.y +/- 0.5\n// Then use c^2 - b^2 = a^2 to find new vel.x\nShooter.prototype.aim = function(dir) {\n    var aimY = this.vel.y;\n\n    if (dir === \"up\") {\n        aimY -= 0.05;\n    } else if (dir === \"down\") {\n        aimY += 0.05;\n    }\n\n    if (aimY > 2.2) {\n        aimY = 2.2;\n    } else if (aimY < -2.2) {\n        aimY = -2.2;\n    }\n\n    var aimX = Math.sqrt(9 - Math.pow(aimY, 2));\n\n    aimX = this.side === \"right\" ? aimX * -1 : aimX;\n\n    this.vel = { x: aimX, y: aimY };\n\n    this.draw();\n};\n\nShooter.prototype.draw = function() {\n    this.gun.css('transform',\n        'rotate(' + this.aimAngle() + 'deg)');\n};\n\nShooter.prototype.placeGun = function() {\n    this.gun.css('position', 'absolute');\n    this.gun.css(this.side, '20px');\n    this.gun.css('top', '50%');\n    if (this.side === \"right\") {\n        this.gun.css('-webkit-transform', 'scaleX(-1)');\n    }\n};\n\nmodule.exports = Shooter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./crossfire/shooter.js\n ** module id = 6\n ** module chunks = 0\n **/","var MovingObject = require('./moving_object');\nvar Util = require('./util');\n\nvar Target = function ($canvas, side) {\n  this.$canvas = $canvas;\n  this.ctx = $canvas[0].getContext(\"2d\");\n  this.side = side;\n  this.target = true;\n\n  var defaults = {\n    radius: 40,\n    vel: {x: 0, y: 0}\n  };\n\n  if (this.side === \"right\") {\n    this.color = \"#268bd2\";\n    defaults.color = \"#268bd2\";\n    defaults.pos = {\n      x: this.$canvas.width() * 0.7,\n      y: this.$canvas.height() / 4\n    };\n  } else if (this.side === \"left\") {\n    this.color = \"#dc322f\";\n    defaults.color = \"#dc322f\";\n    defaults.pos = {\n      x: this.$canvas.width() * 0.3,\n      y: this.$canvas.height() * 3 / 4\n    };\n  }\n\n\n  MovingObject.call(this, $canvas, defaults);\n};\n\nUtil.inherits(Target, MovingObject);\n\n\n\n\nmodule.exports = Target;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./crossfire/target.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}